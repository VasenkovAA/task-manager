# Generated by Django 5.0.4 on 2025-06-05 21:32

import django.core.validators
import django.db.models.deletion
import taggit.managers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        (
            "taggit",
            "0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx",
        ),
        ("tasks", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="fileattachment",
            options={
                "ordering": ("-uploaded_at",),
                "verbose_name": "Файловое вложение",
                "verbose_name_plural": "Файловые вложения",
            },
        ),
        migrations.AlterModelOptions(
            name="historicaltask",
            options={
                "get_latest_by": ("history_date", "history_id"),
                "ordering": ("-history_date", "-history_id"),
                "verbose_name": "История изменений",
                "verbose_name_plural": "historical Задачи",
            },
        ),
        migrations.AlterModelOptions(
            name="link",
            options={
                "ordering": ("-created_at",),
                "verbose_name": "Ссылка",
                "verbose_name_plural": "Ссылки",
            },
        ),
        migrations.AlterModelOptions(
            name="location",
            options={
                "ordering": ("name",),
                "verbose_name": "Местоположение",
                "verbose_name_plural": "Местоположения",
            },
        ),
        migrations.AlterModelOptions(
            name="notificationmethod",
            options={
                "ordering": ("name",),
                "verbose_name": "Метод уведомления",
                "verbose_name_plural": "Методы уведомления",
            },
        ),
        migrations.AlterModelOptions(
            name="task",
            options={
                "ordering": ["-created_at"],
                "permissions": [
                    ("can_approve_task", "Может подтверждать завершение задач"),
                    ("can_assign_task", "Может назначать задачи другим пользователям"),
                    ("can_restore_task", "Может восстанавливать удаленные задачи"),
                ],
                "verbose_name": "Задача",
                "verbose_name_plural": "Задачи",
            },
        ),
        migrations.AlterModelOptions(
            name="taskcategory",
            options={
                "ordering": ("name",),
                "verbose_name": "Категория задач",
                "verbose_name_plural": "Категории задач",
            },
        ),
        migrations.AlterModelOptions(
            name="tasklink",
            options={
                "ordering": ("-created_at",),
                "verbose_name": "Связь задачи со ссылкой",
                "verbose_name_plural": "Связи задач со ссылками",
            },
        ),
        migrations.AlterModelOptions(
            name="userprofile",
            options={
                "verbose_name": "Профиль пользователя",
                "verbose_name_plural": "Профили пользователей",
            },
        ),
        migrations.AlterField(
            model_name="fileattachment",
            name="description",
            field=models.CharField(
                blank=True,
                help_text="Описание файла (макс. 200 символов)",
                max_length=200,
                null=True,
                verbose_name="Описание",
            ),
        ),
        migrations.AlterField(
            model_name="fileattachment",
            name="file",
            field=models.FileField(
                help_text="Прикрепленный файл (макс. 10 МБ)",
                upload_to="task_attachments/%Y/%m/%d/",
                verbose_name="Файл",
            ),
        ),
        migrations.AlterField(
            model_name="fileattachment",
            name="task",
            field=models.ForeignKey(
                help_text="Связанная задача",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="attachments",
                to="tasks.task",
                verbose_name="Задача",
            ),
        ),
        migrations.AlterField(
            model_name="fileattachment",
            name="uploaded_at",
            field=models.DateTimeField(
                auto_now_add=True,
                db_index=True,
                help_text="Время загрузки файла",
                verbose_name="Дата загрузки",
            ),
        ),
        migrations.AlterField(
            model_name="historicaltask",
            name="actual_time",
            field=models.DurationField(
                blank=True,
                help_text="Фактическое время, затраченное на выполнение",
                null=True,
                verbose_name="Фактическое время",
            ),
        ),
        migrations.AlterField(
            model_name="historicaltask",
            name="assignee",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                help_text="Основной исполнитель задачи",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Исполнитель",
            ),
        ),
        migrations.AlterField(
            model_name="historicaltask",
            name="author",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                help_text="Пользователь, создавший задачу",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Автор",
            ),
        ),
        migrations.AlterField(
            model_name="historicaltask",
            name="budget",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Выделенный бюджет в валюте системы",
                max_digits=10,
                null=True,
                verbose_name="Бюджет",
            ),
        ),
        migrations.AlterField(
            model_name="historicaltask",
            name="cancel_reason",
            field=models.TextField(
                blank=True,
                help_text="Причина отмены задачи (обязателен при статусе 'canceled')",
                null=True,
                verbose_name="Причина отмены",
            ),
        ),
        migrations.AlterField(
            model_name="historicaltask",
            name="complexity",
            field=models.IntegerField(
                default=5,
                help_text="Оценка сложности по 10-балльной шкале",
                validators=[
                    django.core.validators.MinValueValidator(1),
                    django.core.validators.MaxValueValidator(10),
                ],
                verbose_name="Сложность",
            ),
        ),
        migrations.AlterField(
            model_name="historicaltask",
            name="created_at",
            field=models.DateTimeField(
                blank=True,
                db_index=True,
                editable=False,
                help_text="Автоматически устанавливается при создании задачи",
                verbose_name="Дата создания",
            ),
        ),
        migrations.AlterField(
            model_name="historicaltask",
            name="deadline",
            field=models.DateTimeField(
                blank=True,
                db_index=True,
                help_text="Крайний срок выполнения (дедлайн)",
                null=True,
                verbose_name="Дедлайн",
            ),
        ),
        migrations.AlterField(
            model_name="historicaltask",
            name="description",
            field=models.TextField(
                blank=True,
                help_text="Подробное описание задачи, поддерживающее форматирование",
                null=True,
                verbose_name="Описание задачи",
            ),
        ),
        migrations.AlterField(
            model_name="historicaltask",
            name="end_date",
            field=models.DateTimeField(
                blank=True,
                help_text="Планируемая дата и время завершения",
                null=True,
                verbose_name="Дата завершения",
            ),
        ),
        migrations.AlterField(
            model_name="historicaltask",
            name="estimated_time",
            field=models.DurationField(
                blank=True,
                help_text="Планируемая продолжительность выполнения",
                null=True,
                verbose_name="Оценка времени",
            ),
        ),
        migrations.AlterField(
            model_name="historicaltask",
            name="is_ready",
            field=models.BooleanField(
                default=False,
                help_text="Готовность к выполнению (все зависимости выполнены)",
                verbose_name="Готова к выполнению",
            ),
        ),
        migrations.AlterField(
            model_name="historicaltask",
            name="is_recurring",
            field=models.BooleanField(
                default=False,
                help_text="Повторяющаяся задача (например, ежедневная)",
                verbose_name="Повторяющаяся",
            ),
        ),
        migrations.AlterField(
            model_name="historicaltask",
            name="is_template",
            field=models.BooleanField(
                default=False,
                help_text="Используется как шаблон для создания новых задач",
                verbose_name="Шаблон",
            ),
        ),
        migrations.AlterField(
            model_name="historicaltask",
            name="last_editor",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                help_text="Последний пользователь, внёсший изменения",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Последний редактор",
            ),
        ),
        migrations.AlterField(
            model_name="historicaltask",
            name="location",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                help_text="Физическое место выполнения задачи",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="tasks.location",
                verbose_name="Местоположение",
            ),
        ),
        migrations.AlterField(
            model_name="historicaltask",
            name="needs_approval",
            field=models.BooleanField(
                default=False,
                help_text="Требует подтверждения завершения руководителем",
                verbose_name="Требует подтверждения",
            ),
        ),
        migrations.AlterField(
            model_name="historicaltask",
            name="next_activation",
            field=models.DateTimeField(
                blank=True,
                help_text="Дата следующего выполнения (для периодических задач)",
                null=True,
                verbose_name="Следующая активация",
            ),
        ),
        migrations.AlterField(
            model_name="historicaltask",
            name="priority",
            field=models.IntegerField(
                default=5,
                help_text="Приоритет по 10-балльной шкале (1 - низший, 10 - высший)",
                validators=[
                    django.core.validators.MinValueValidator(1),
                    django.core.validators.MaxValueValidator(10),
                ],
                verbose_name="Приоритет",
            ),
        ),
        migrations.AlterField(
            model_name="historicaltask",
            name="progress",
            field=models.IntegerField(
                default=0,
                help_text="Прогресс выполнения в процентах (0-100%)",
                validators=[
                    django.core.validators.MinValueValidator(0),
                    django.core.validators.MaxValueValidator(100),
                ],
                verbose_name="Прогресс выполнения",
            ),
        ),
        migrations.AlterField(
            model_name="historicaltask",
            name="quality_rating",
            field=models.IntegerField(
                blank=True,
                help_text="Оценка качества выполнения по 5-балльной шкале",
                null=True,
                validators=[
                    django.core.validators.MinValueValidator(1),
                    django.core.validators.MaxValueValidator(5),
                ],
                verbose_name="Оценка качества",
            ),
        ),
        migrations.AlterField(
            model_name="historicaltask",
            name="reminders",
            field=models.JSONField(
                blank=True,
                default=list,
                help_text="Напоминания в формате [{'time': datetime, 'method': id}]",
                null=True,
                verbose_name="Напоминания",
            ),
        ),
        migrations.AlterField(
            model_name="historicaltask",
            name="repeat_interval",
            field=models.DurationField(
                blank=True,
                help_text="Интервал повторения (для периодических задач)",
                null=True,
                verbose_name="Интервал повторения",
            ),
        ),
        migrations.AlterField(
            model_name="historicaltask",
            name="risk_level",
            field=models.CharField(
                choices=[("low", "Низкий"), ("medium", "Средний"), ("high", "Высокий")],
                default="low",
                help_text="Оценка рисков при выполнении задачи",
                max_length=10,
                verbose_name="Уровень риска",
            ),
        ),
        migrations.AlterField(
            model_name="historicaltask",
            name="start_date",
            field=models.DateTimeField(
                blank=True,
                help_text="Планируемая дата и время начала выполнения",
                null=True,
                verbose_name="Дата начала",
            ),
        ),
        migrations.AlterField(
            model_name="historicaltask",
            name="status",
            field=models.CharField(
                choices=[
                    ("waiting", "Ожидает начала"),
                    ("progress", "В процессе"),
                    ("done", "Завершена"),
                    ("canceled", "Отменена"),
                ],
                default="waiting",
                help_text="Текущий статус выполнения задачи",
                max_length=20,
                verbose_name="Статус",
            ),
        ),
        migrations.AlterField(
            model_name="historicaltask",
            name="time_intervals",
            field=models.JSONField(
                blank=True,
                default=list,
                help_text="Диапазоны времени выполнения в формате JSON",
                null=True,
                verbose_name="Временные интервалы",
            ),
        ),
        migrations.AlterField(
            model_name="historicaltask",
            name="title",
            field=models.CharField(
                db_index=True,
                error_messages={"unique": "Задача с таким названием уже существует"},
                help_text="Уникальное название задачи (макс. 200 символов)",
                max_length=200,
                verbose_name="Название задачи",
            ),
        ),
        migrations.AlterField(
            model_name="historicaltask",
            name="updated_at",
            field=models.DateTimeField(
                blank=True,
                editable=False,
                help_text="Автоматически обновляется при каждом сохранении",
                verbose_name="Дата обновления",
            ),
        ),
        migrations.AlterField(
            model_name="link",
            name="created_at",
            field=models.DateTimeField(
                auto_now_add=True,
                db_index=True,
                help_text="Дата создания ссылки",
                verbose_name="Дата создания",
            ),
        ),
        migrations.AlterField(
            model_name="link",
            name="url",
            field=models.URLField(
                error_messages={"unique": "Ссылка с таким URL уже существует"},
                help_text="Уникальный URL-адрес",
                max_length=500,
                unique=True,
                verbose_name="URL",
            ),
        ),
        migrations.AlterField(
            model_name="location",
            name="address",
            field=models.TextField(
                blank=True,
                help_text="Полный адрес места",
                null=True,
                verbose_name="Адрес",
            ),
        ),
        migrations.AlterField(
            model_name="location",
            name="coordinates",
            field=models.CharField(
                blank=True,
                help_text="Координаты в формате 'широта,долгота'",
                max_length=50,
                null=True,
                verbose_name="Координаты",
            ),
        ),
        migrations.AlterField(
            model_name="location",
            name="name",
            field=models.CharField(
                db_index=True,
                help_text="Название места выполнения задачи",
                max_length=100,
                verbose_name="Название места",
            ),
        ),
        migrations.AlterField(
            model_name="notificationmethod",
            name="config",
            field=models.JSONField(
                default=dict,
                help_text="Конфигурация метода уведомления в формате JSON",
                verbose_name="Конфигурация",
            ),
        ),
        migrations.AlterField(
            model_name="notificationmethod",
            name="name",
            field=models.CharField(
                error_messages={
                    "unique": "Метод уведомления с таким названием уже существует"
                },
                help_text="Уникальное название метода уведомления (например: email, telegram)",
                max_length=50,
                unique=True,
                verbose_name="Название метода",
            ),
        ),
        migrations.AlterField(
            model_name="task",
            name="actual_time",
            field=models.DurationField(
                blank=True,
                help_text="Фактическое время, затраченное на выполнение",
                null=True,
                verbose_name="Фактическое время",
            ),
        ),
        migrations.AlterField(
            model_name="task",
            name="assignee",
            field=models.ForeignKey(
                blank=True,
                help_text="Основной исполнитель задачи",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="assigned_tasks",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Исполнитель",
            ),
        ),
        migrations.AlterField(
            model_name="task",
            name="author",
            field=models.ForeignKey(
                help_text="Пользователь, создавший задачу",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="created_tasks",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Автор",
            ),
        ),
        migrations.AlterField(
            model_name="task",
            name="budget",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Выделенный бюджет в валюте системы",
                max_digits=10,
                null=True,
                verbose_name="Бюджет",
            ),
        ),
        migrations.AlterField(
            model_name="task",
            name="cancel_reason",
            field=models.TextField(
                blank=True,
                help_text="Причина отмены задачи (обязателен при статусе 'canceled')",
                null=True,
                verbose_name="Причина отмены",
            ),
        ),
        migrations.AlterField(
            model_name="task",
            name="categories",
            field=models.ManyToManyField(
                blank=True,
                help_text="Категории для классификации задач",
                related_name="tasks",
                to="tasks.taskcategory",
                verbose_name="Категории",
            ),
        ),
        migrations.AlterField(
            model_name="task",
            name="complexity",
            field=models.IntegerField(
                default=5,
                help_text="Оценка сложности по 10-балльной шкале",
                validators=[
                    django.core.validators.MinValueValidator(1),
                    django.core.validators.MaxValueValidator(10),
                ],
                verbose_name="Сложность",
            ),
        ),
        migrations.AlterField(
            model_name="task",
            name="created_at",
            field=models.DateTimeField(
                auto_now_add=True,
                db_index=True,
                help_text="Автоматически устанавливается при создании задачи",
                verbose_name="Дата создания",
            ),
        ),
        migrations.AlterField(
            model_name="task",
            name="deadline",
            field=models.DateTimeField(
                blank=True,
                db_index=True,
                help_text="Крайний срок выполнения (дедлайн)",
                null=True,
                verbose_name="Дедлайн",
            ),
        ),
        migrations.AlterField(
            model_name="task",
            name="deleted_at",
            field=models.DateTimeField(
                blank=True,
                editable=False,
                help_text="Заполняется автоматически при удалении задачи",
                null=True,
                verbose_name="Дата удаления",
            ),
        ),
        migrations.AlterField(
            model_name="task",
            name="dependencies",
            field=models.ManyToManyField(
                blank=True,
                help_text="Задачи, которые должны быть выполнены ДО текущей",
                related_name="dependent_tasks",
                to="tasks.task",
                verbose_name="Зависимости",
            ),
        ),
        migrations.AlterField(
            model_name="task",
            name="description",
            field=models.TextField(
                blank=True,
                help_text="Подробное описание задачи, поддерживающее форматирование",
                null=True,
                verbose_name="Описание задачи",
            ),
        ),
        migrations.AlterField(
            model_name="task",
            name="end_date",
            field=models.DateTimeField(
                blank=True,
                help_text="Планируемая дата и время завершения",
                null=True,
                verbose_name="Дата завершения",
            ),
        ),
        migrations.AlterField(
            model_name="task",
            name="estimated_time",
            field=models.DurationField(
                blank=True,
                help_text="Планируемая продолжительность выполнения",
                null=True,
                verbose_name="Оценка времени",
            ),
        ),
        migrations.AlterField(
            model_name="task",
            name="is_deleted",
            field=models.BooleanField(
                default=False,
                editable=False,
                help_text="Помечена как удалённая (мягкое удаление)",
                verbose_name="Удалена",
            ),
        ),
        migrations.AlterField(
            model_name="task",
            name="is_ready",
            field=models.BooleanField(
                default=False,
                help_text="Готовность к выполнению (все зависимости выполнены)",
                verbose_name="Готова к выполнению",
            ),
        ),
        migrations.AlterField(
            model_name="task",
            name="is_recurring",
            field=models.BooleanField(
                default=False,
                help_text="Повторяющаяся задача (например, ежедневная)",
                verbose_name="Повторяющаяся",
            ),
        ),
        migrations.AlterField(
            model_name="task",
            name="is_template",
            field=models.BooleanField(
                default=False,
                help_text="Используется как шаблон для создания новых задач",
                verbose_name="Шаблон",
            ),
        ),
        migrations.AlterField(
            model_name="task",
            name="last_editor",
            field=models.ForeignKey(
                blank=True,
                help_text="Последний пользователь, внёсший изменения",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="edited_tasks",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Последний редактор",
            ),
        ),
        migrations.AlterField(
            model_name="task",
            name="links",
            field=models.ManyToManyField(
                blank=True,
                help_text="Связанные внешние ресурсы и документы",
                through="tasks.TaskLink",
                to="tasks.link",
                verbose_name="Ссылки",
            ),
        ),
        migrations.AlterField(
            model_name="task",
            name="location",
            field=models.ForeignKey(
                blank=True,
                help_text="Физическое место выполнения задачи",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="tasks.location",
                verbose_name="Местоположение",
            ),
        ),
        migrations.AlterField(
            model_name="task",
            name="needs_approval",
            field=models.BooleanField(
                default=False,
                help_text="Требует подтверждения завершения руководителем",
                verbose_name="Требует подтверждения",
            ),
        ),
        migrations.AlterField(
            model_name="task",
            name="next_activation",
            field=models.DateTimeField(
                blank=True,
                help_text="Дата следующего выполнения (для периодических задач)",
                null=True,
                verbose_name="Следующая активация",
            ),
        ),
        migrations.AlterField(
            model_name="task",
            name="notifications",
            field=models.ManyToManyField(
                blank=True,
                help_text="Методы уведомления о событиях задачи",
                related_name="tasks",
                to="tasks.notificationmethod",
                verbose_name="Методы уведомления",
            ),
        ),
        migrations.AlterField(
            model_name="task",
            name="priority",
            field=models.IntegerField(
                default=5,
                help_text="Приоритет по 10-балльной шкале (1 - низший, 10 - высший)",
                validators=[
                    django.core.validators.MinValueValidator(1),
                    django.core.validators.MaxValueValidator(10),
                ],
                verbose_name="Приоритет",
            ),
        ),
        migrations.AlterField(
            model_name="task",
            name="progress",
            field=models.IntegerField(
                default=0,
                help_text="Прогресс выполнения в процентах (0-100%)",
                validators=[
                    django.core.validators.MinValueValidator(0),
                    django.core.validators.MaxValueValidator(100),
                ],
                verbose_name="Прогресс выполнения",
            ),
        ),
        migrations.AlterField(
            model_name="task",
            name="quality_rating",
            field=models.IntegerField(
                blank=True,
                help_text="Оценка качества выполнения по 5-балльной шкале",
                null=True,
                validators=[
                    django.core.validators.MinValueValidator(1),
                    django.core.validators.MaxValueValidator(5),
                ],
                verbose_name="Оценка качества",
            ),
        ),
        migrations.AlterField(
            model_name="task",
            name="reminders",
            field=models.JSONField(
                blank=True,
                default=list,
                help_text="Напоминания в формате [{'time': datetime, 'method': id}]",
                null=True,
                verbose_name="Напоминания",
            ),
        ),
        migrations.AlterField(
            model_name="task",
            name="repeat_interval",
            field=models.DurationField(
                blank=True,
                help_text="Интервал повторения (для периодических задач)",
                null=True,
                verbose_name="Интервал повторения",
            ),
        ),
        migrations.AlterField(
            model_name="task",
            name="risk_level",
            field=models.CharField(
                choices=[("low", "Низкий"), ("medium", "Средний"), ("high", "Высокий")],
                default="low",
                help_text="Оценка рисков при выполнении задачи",
                max_length=10,
                verbose_name="Уровень риска",
            ),
        ),
        migrations.AlterField(
            model_name="task",
            name="start_date",
            field=models.DateTimeField(
                blank=True,
                help_text="Планируемая дата и время начала выполнения",
                null=True,
                verbose_name="Дата начала",
            ),
        ),
        migrations.AlterField(
            model_name="task",
            name="status",
            field=models.CharField(
                choices=[
                    ("waiting", "Ожидает начала"),
                    ("progress", "В процессе"),
                    ("done", "Завершена"),
                    ("canceled", "Отменена"),
                ],
                default="waiting",
                help_text="Текущий статус выполнения задачи",
                max_length=20,
                verbose_name="Статус",
            ),
        ),
        migrations.AlterField(
            model_name="task",
            name="tags",
            field=taggit.managers.TaggableManager(
                blank=True,
                help_text="Гибкая система тегов для категоризации задач",
                through="taggit.TaggedItem",
                to="taggit.Tag",
                verbose_name="Теги",
            ),
        ),
        migrations.AlterField(
            model_name="task",
            name="time_intervals",
            field=models.JSONField(
                blank=True,
                default=list,
                help_text="Диапазоны времени выполнения в формате JSON",
                null=True,
                verbose_name="Временные интервалы",
            ),
        ),
        migrations.AlterField(
            model_name="task",
            name="title",
            field=models.CharField(
                db_index=True,
                error_messages={"unique": "Задача с таким названием уже существует"},
                help_text="Уникальное название задачи (макс. 200 символов)",
                max_length=200,
                unique=True,
                verbose_name="Название задачи",
            ),
        ),
        migrations.AlterField(
            model_name="task",
            name="updated_at",
            field=models.DateTimeField(
                auto_now=True,
                help_text="Автоматически обновляется при каждом сохранении",
                verbose_name="Дата обновления",
            ),
        ),
        migrations.AlterField(
            model_name="task",
            name="version",
            field=models.IntegerField(
                default=1,
                editable=False,
                help_text="Версия объекта (инкрементируется при изменениях)",
                verbose_name="Версия",
            ),
        ),
        migrations.AlterField(
            model_name="taskcategory",
            name="description",
            field=models.TextField(
                blank=True,
                help_text="Описание категории задач",
                null=True,
                verbose_name="Описание",
            ),
        ),
        migrations.AlterField(
            model_name="taskcategory",
            name="name",
            field=models.CharField(
                error_messages={"unique": "Категория с таким названием уже существует"},
                help_text="Уникальное название категории (макс. 50 символов)",
                max_length=50,
                unique=True,
                verbose_name="Название категории",
            ),
        ),
        migrations.AlterField(
            model_name="tasklink",
            name="created_at",
            field=models.DateTimeField(
                auto_now_add=True,
                db_index=True,
                help_text="Дата автоматического создания связи",
                verbose_name="Дата создания",
            ),
        ),
        migrations.AlterField(
            model_name="tasklink",
            name="description",
            field=models.CharField(
                blank=True,
                help_text="Описание связи (макс. 200 символов)",
                max_length=200,
                null=True,
                verbose_name="Описание связи",
            ),
        ),
        migrations.AlterField(
            model_name="tasklink",
            name="link",
            field=models.ForeignKey(
                help_text="Связанная ссылка",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="link_tasks",
                to="tasks.link",
            ),
        ),
        migrations.AlterField(
            model_name="tasklink",
            name="task",
            field=models.ForeignKey(
                help_text="Связанная задача",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="task_links",
                to="tasks.task",
            ),
        ),
        migrations.AlterField(
            model_name="userprofile",
            name="graph_settings",
            field=models.JSONField(
                blank=True,
                default={
                    "borderColors": {
                        "canceled": "#9E9E9E",
                        "done": "#4CAF50",
                        "progress": "#2196F3",
                        "waiting": "#FFEB3B",
                    },
                    "deadlineIndicator": True,
                    "showDependencyProgress": True,
                    "showProgressBar": True,
                    "showStatus": True,
                    "taskBackground": "#FFFFFF",
                },
                help_text="Параметры отображения диаграмм в JSON-формате",
                verbose_name="Настройки графиков",
            ),
        ),
        migrations.AlterField(
            model_name="userprofile",
            name="user",
            field=models.OneToOneField(
                help_text="Связанный аккаунт пользователя",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="profile",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Пользователь",
            ),
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(
                fields=["priority"], name="tasks_task_priorit_a900d4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(
                fields=["assignee"], name="tasks_task_assigne_a1ddb3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(
                fields=["is_ready"], name="tasks_task_is_read_6eef1c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tasklink",
            index=models.Index(
                fields=["created_at"], name="tasks_taskl_created_787f16_idx"
            ),
        ),
    ]
